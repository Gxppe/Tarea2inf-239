// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Tabla usuario, consideramos la direccion de correo electrónicos como clave primaria. Un usuario
// puede enviar y recibir cero o más correos, por ende establecimos una relación con la tabla Correo
// Un usuario puede bloquear cero o más usuarios, también establecimos una relación con la tabla Usuario_bloqueado
// Por último un usuario puede marcar cero o más correos como favoritos, entonces establecimos una relación con 
// la tabla Favorito.

model Usuario {
  direccion_correo   String              @id
  descripcion        String
  fecha_creacion     DateTime            @default(now())
  nombre             String
  clave              String
  estado             Int
  correosEnviados    Correo[]            @relation("RemitenteRelation")
  correosRecibidos   Correo[]            @relation("DestinatarioRelation")
  usuariosBloqueados Usuario_bloqueado[] @relation("Bloqueador")
  bloqueadoPor       Usuario_bloqueado[] @relation("Bloqueado")
  correosFavoritos   Favorito[]          @relation("FavoritosRelation")
}

// Tabla Correo, su clave primaria es un entero que se va incrementando. 
// Un correo puede ser enviado y entregado a un usuario, por ende establecimos una relación con la tabla Usuario
// Uno o más correos pueden ser marcados como favoritos, entonces establecimos una relación con la tabla Favorito

model Correo {
  correo_id           Int        @id @default(autoincrement())
  remitente           String
  destinatario        String
  asunto              String
  cuerpo              String
  fecha_envio         DateTime   @default(now())
  leido               Boolean    @default(false)
  usuarioremitente    Usuario    @relation("RemitenteRelation", fields: [remitente], references: [direccion_correo])
  usuariodestinatario Usuario    @relation("DestinatarioRelation", fields: [destinatario], references: [direccion_correo])
  favoritos           Favorito[] @relation("FavoritosCorreo")
}

// Tabla Favorito. Es una tabla con una clave compuesta por el id del correo marcado como favorito y por la direccion 
// del correo del usuario que marca el correo.

model Favorito {
  correo_id        Int
  direccion_correo String
  correo           Correo  @relation("FavoritosCorreo", fields: [correo_id], references: [correo_id])
  usuario          Usuario @relation("FavoritosRelation", fields: [direccion_correo], references: [direccion_correo])

  @@id([correo_id, direccion_correo])
}

// Tabla Usuario_bloqueado. Es una tabla con una clave compuesta por la dirección del correo del usuario bloqueado y 
// la direccion del correo del usuario que bloquea.

model Usuario_bloqueado {
  bloqueadorCorreo String
  bloqueadoCorreo  String
  bloqueador       Usuario @relation(name: "Bloqueador", fields: [bloqueadorCorreo], references: [direccion_correo])
  bloqueado        Usuario @relation(name: "Bloqueado", fields: [bloqueadoCorreo], references: [direccion_correo])

  @@id([bloqueadorCorreo, bloqueadoCorreo])
}
